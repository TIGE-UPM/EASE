<?php
	class GameController extends Zend_Controller_Action {
		public $_controllerTitle= "Juegos - ";
		public function preDispatch(){
			$this->view->title = $this->_controllerTitle;
			$this->_helper->authHelper();
			$this->_helper->adminControl();
	    }
		function processAction(){		
			if (isset ($_GET['game_id']) && isset($_GET['round_number'])){
				$this->view->headTitle($this->view->title, 'PREPEND');	
				$game_id=$_GET['game_id'];
				$round_number=$_GET['round_number']; 					
				$games = new Model_DbTable_Games();
				$game = $games->getGame($game_id);
				$round = $games->getRound($game_id, $round_number);
				$core=new Model_Simulation_Core();
				$core->simulate($game, $round);
				
				//$redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
				//$redirector->gotoUrl($url."game/outcomes?game_id=".$game['id']."&round_number=".$round['round_number']);
			}
		}
		function editdecisionAction(){
			$this->view->controllerName='game';
			$this->view->actionName="view";

			$round_number=$_GET['round'];
			
			$games=new Model_DbTable_Games();
			$regions=$games->getRegions($_GET['game_id']);
			$qualityParams=$games->getQualityParams($_GET['game_id']);
			$products=$games->getProducts($_GET['game_id']);
			$game_initiatives=$games->getInitiatives($_GET['game_id']);	
			$game_channels=$games->getChannels($_GET['game_id']);
			$game_media=$games->getMedia($_GET['game_id']);
			$game_initiatives_prod=$games->getInitiativesProd($_GET['game_id']);
			$game_initiatives_mkt=$games->getInitiativesMKT($_GET['game_id']);
			$game_initiatives_hr=$games->getInitiativesHR($_GET['game_id']);
			$game_initiatives_det=$games->getInitiativesDET($_GET['game_id']);			
			$game_marketResearches_costs=$games->getMarketResearchesCosts($_GET['game_id']);
			$idiProducts=$games->getIdiProducts($_GET['game_id']);
			$factories=$games->getFactories($_GET['game_id'],$_GET['round'],$_GET['company_id']);
			$amount=$games->getFinanceAmount($_GET['game_id'], $_GET['round'], $_GET['company_id']);
			$interest_adjustment=($games->getInterestAdjustment($_GET['game_id'],$_GET['round'],$_GET['company_id']));
			$game_initiatives_chosen=$games->getInitiativeChosen($_GET['game_id'],$_GET['round'],$_GET['company_id']);

			
			$trademedia[0]=array('trademedia_number'=>1, 'name'=>'Patrocinio');
			$trademedia[1]=array('trademedia_number'=>2, 'name'=>'PromociÃ³n');
			
			$channel_payterms[0]=array('value'=>0, 'descriptor'=>'Inmediato');
			$channel_payterms[1]=array('value'=>1, 'descriptor'=>'Aplazado 1 mes');
			$channel_payterms[2]=array('value'=>2, 'descriptor'=>'Aplazado 2 meses');
			$channel_payterms[3]=array('value'=>3, 'descriptor'=>'Aplazado 3 meses');
			$channel_payterms[4]=array('value'=>4, 'descriptor'=>'Aplazado 4 meses');
			
			$wages[0]=array('value'=>1.015, 'descriptor'=>'Primer Intervalo');
			$wages[1]=array('value'=>1.000, 'descriptor'=>'Segundo Intervalo');
			$wages[2]=array('value'=>0.985, 'descriptor'=>'Tercer Intervalo');

			$level[0]=array('value'=>1.02, 'descriptor'=>'Experto');
			$level[1]=array('value'=>1.00, 'descriptor'=>'Avanzado');
			$level[2]=array('value'=>0.98, 'descriptor'=>'Basico');
			
			if ($round_number>1 && $round_number<4){
				$term[0]=array('value'=>2, 'descriptor'=>'Dos a&ntilde;os');
				$term[1]=array('value'=>3, 'descriptor'=>'Tres a&ntilde;os');
				$term[2]=array('value'=>4, 'descriptor'=>'Cuatro a&ntilde;os');
			}
			else {
				if($round_number==4){
					$term[0]=array('value'=>2, 'descriptor'=>'Dos a&ntilde;os');
					$term[1]=array('value'=>3, 'descriptor'=>'Tres a&ntilde;os');
				}
				else {
					if($round_number==5){
					$term[0]=array('value'=>2, 'descriptor'=>'Dos a&ntilde;os');
					}
				}
			}
			
			//Para calcular el interes de la opcion seleccionada
			$this->view->interest_rate=$games->getInterestRate($_GET['game_id']);
			$interest[0]=array('value'=>$this->view->interest_rate['term_2']);
			$interest[1]=array('value'=>$this->view->interest_rate['term_3']);
			$interest[2]=array('value'=>$this->view->interest_rate['term_4']);
			
			$initiativevalue[0]=array('value'=>0, 'descriptor'=>'No');
			$initiativevalue[1]=array('value'=>1, 'descriptor'=>'Si');
			
			$researchvalue[0]=array('value'=>0, 'descriptor'=>'No');
			$researchvalue[1]=array('value'=>1, 'descriptor'=>'Si');
	
			$newidivalue[0]=array('value'=>0, 'descriptor'=>'No');
			$newidivalue[1]=array('value'=>1, 'descriptor'=>'Si');
			
			$changeidi[0]=array('value'=>2, 'descriptor'=>'(+2)');
			$changeidi[1]=array('value'=>1, 'descriptor'=>'(+1)');
			$changeidi[2]=array('value'=>0, 'descriptor'=>'0');
			$changeidi[3]=array('value'=>-1, 'descriptor'=>'(-1)');
			$changeidi[4]=array('value'=>-2, 'descriptor'=>'(-2)');
			$changeidi[5]=array('value'=>-3, 'descriptor'=>'(-3)');
						
			//$this->view->factories=$factories;
			
			$this->view->regions=$regions;
			
			$this->view->qualityParams=$qualityParams;
			$this->view->products=$products;
			
			$outcomes=new Model_DbTable_Outcomes();
			$this->view->stocks_units=$outcomes->getStock($_GET['game_id'],$_GET['round']);
			
			$this->view->channels=$game_channels;
			$this->view->media=$game_media;
			//$this->view->media_intensities=$media_intensities;
			$this->view->trademedia=$trademedia;
			//$this->view->trade_intensities=$trade_intensities;
			$this->view->channel_payterms=$channel_payterms;
			$this->view->wages=$wages;
			$this->view->level=$level;
			$this->view->term=$term;
			$this->view->amount=$amount;
			$this->view->interest_adjustment=$interest_adjustment;
			$this->view->interest_aux=$interest;
			$this->view->initiativevalue=$initiativevalue;
			$this->view->initiativesProd=$game_initiatives_prod;
			$this->view->initiativesHR=$game_initiatives_hr;
			$this->view->initiativesMKT=$game_initiatives_mkt;
			$this->view->initiativesDET=$game_initiatives_det;
			$this->view->initiative_chosen=$game_initiatives_chosen;
			$this->view->researchvalue=$researchvalue;
			$this->view->researchcosts=$game_marketResearches_costs;
			$this->view->idiProducts=$idiProducts;
			$this->view->newidivalue=$newidivalue;
			$this->view->changeidi=$changeidi;
			$this->view->lastFactory=$games->getLastFactory($_GET['game_id'], $_GET['company_id']);
			$this->view->roundFactory=$games->getRoundFactoryCreated($_GET['game_id'], $_GET['company_id']);
			$this->view->product_availability=$games->getProductsAvailibility($_GET['game_id'],$_GET['round'],$_GET['company_id']);
			
			
			$region_count= new Model_DbTable_Decisions_Pr_Region();
			$factories=$games->getFactories($_GET['game_id'],$_GET['company_id']);
			$aux=$region_count->countFactories($_GET['game_id'],$_GET['company_id']);
			$this->view->numberOfFactories=$aux;
			$this->view->game_factories=$factories;
			$this->view->booleanCreate=0;

			$companies = new Model_DbTable_Companies();
			
			$this->view->game=$games->getGame($_GET['game_id']);
			$this->view->round_number = $_GET['round'];
			$this->view->company = $companies->getCompany($_GET['company_id']);
			
			$this->view->n_products=$games->getNumberOfProductsAvailable($_GET['game_id'], $_GET['round'], $_GET['company_id']);
			
			$pr_decisions=new Model_DbTable_Decisions_Production();
			$mk_decisions=new Model_DbTable_Decisions_Marketing();
			$su_decisions=new Model_DbTable_Decisions_Suppliers();
			$hr_decisions=new Model_DbTable_Decisions_HumanResources();
			$fi_decisions=new Model_DbTable_Decisions_Finance();
			$in_decisions=new Model_DbTable_Decisions_Initiatives();
			$mr_decisions=new Model_DbTable_Decisions_MarketResearches();
			$idi_decisions=new Model_DbTable_Decisions_Idi();
			if ($this->getRequest()->isPost()){			
				$postData=$this->getRequest()->getPost();
				//var_dump($postData); die();
				if (isset ($postData['production_decision'])){
					$pr_decisionData=$postData['production_decision'];
					//var_dump($pr_decisionData);die();
					$pr_decisions->processDecision($pr_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['marketing'])){
					$mk_decisionData=$postData['marketing'];
					$mk_decisions->processDecision($mk_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['suppliers'])){
					$su_decisionData=$postData['suppliers'];
					$su_decisions->processDecision($su_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['humanResources'])){
					$hr_decisionData=$postData['humanResources'];
					$hr_decisions->processDecision($hr_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['finance'])){
					$fi_decisionData=$postData['finance'];
					//var_dump($fi_decisionData); die();
					$fi_decisions->processDecision($fi_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['initiatives'])){
					$in_decisionData=$postData['initiatives'];
					//var_dump($in_decisionData); die();
					$in_decisions->processDecision($in_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['marketresearch'])){
					$mr_decisionData=$postData['marketresearch'];
					//var_dump($mr_decisionData); die();
					$mr_decisions->processDecision($mr_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
				if (isset ($postData['idi'])){
					$idi_decisionData=$postData['idi'];
					//var_dump($idi_decisionData); die();
					$idi_decisions->processDecision($idi_decisionData, $_GET['game_id'], $_GET['company_id'], $_GET['round']);
				}
			}
			//No dependen de la ronda
			//production
				$region_count= new Model_DbTable_Decisions_Pr_Region();
				$pr_lastDecision=$pr_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				$factories=$games->getFactories($_GET['game_id'],$_GET['company_id']);
				$this->view->regionDecision=$pr_lastDecision['factories'];
				$this->view->qualitiesDecision=$pr_lastDecision['qualities'];
				$aux=$region_count->countFactories($_GET['game_id'],$_GET['company_id']);
				$this->view->numberOfFactories=$aux;
				$this->view->game_factories=$factories;
				$this->view->booleanCreate=0;
				
			//human resources
				$hr_lastDecision=$hr_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				$this->view->formationDecision=$hr_lastDecision['formation'];
				$this->view->addCapacityDecision=$pr_lastDecision['capacity'];
				
				$round_actual=$_GET['round'];
				if($round_actual>1){
					$round_previous=$round_actual-1;
					$mk_lastDecision_prev=$mk_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $round_previous);
					$pr_lastDecision_prev=$pr_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $round_previous);
					$sup_lastDecision_prev=$su_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $round_previous);
					
					$this->view->unitsDecision=$pr_lastDecision_prev['units'];
					$this->view->numberDecision=$su_lastDecision['number'];
					$this->view->paytermsDecision=$su_lastDecision['payterms'];
					
					$this->view->pricesDecision=$mk_lastDecision_prev['prices'];
					$this->view->advertisingbudgetDecision=$mk_lastDecision_prev['advertising_budget'];
					$this->view->advertisingbudgetProductsDecision=$mk_lastDecision_prev['advertising_budget_distribution'];
					$this->view->trademktbudgetProductsDecision=$mk_lastDecision_prev['trademkt_budget_distribution'];
					$this->view->advertisingpercentageDecision=$mk_lastDecision_prev['advertising_percentage'];
					$this->view->trademktbudgetDecision=$mk_lastDecision_prev['trademkt_budget'];
					$this->view->trademktpercentageDecision=$mk_lastDecision_prev['trademkt_percentage'];
				}
				
			if ($pr_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$aux=$region_count->countFactories($_GET['game_id'],$_GET['company_id']);
				$this->view->numberOfFactories=$aux;
				
				$this->view->unitsDecision=$pr_lastDecision['units'];
				$this->view->lastFactory=$games->getLastFactory($_GET['game_id'], $_GET['company_id']);
				$this->view->roundFactory=$games->getRoundFactoryCreated($_GET['game_id'], $_GET['company_id']);
			}
			if ($mk_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$mk_lastDecision=$mk_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				//var_dump($mk_lastDecision); die();
				$this->view->pricesDecision=$mk_lastDecision['prices'];
				$this->view->advertisingbudgetDecision=$mk_lastDecision['advertising_budget'];
				$this->view->advertisingbudgetProductsDecision=$mk_lastDecision['advertising_budget_distribution'];
				$this->view->trademktbudgetProductsDecision=$mk_lastDecision['trademkt_budget_distribution'];
				//var_dump($this->view->trademktbudgetProductsDecision);die();
				$this->view->advertisingpercentageDecision=$mk_lastDecision['advertising_percentage'];
				$this->view->trademktbudgetDecision=$mk_lastDecision['trademkt_budget'];
				$this->view->trademktpercentageDecision=$mk_lastDecision['trademkt_percentage'];
			}
			if ($su_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$su_lastDecision=$su_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				$this->view->numberDecision=$su_lastDecision['number'];
				$this->view->paytermsDecision=$su_lastDecision['payterms'];
			}
			if ($hr_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$this->view->cuartilDecision=$hr_lastDecision['cuartil'];
			}
			if ($fi_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$fi_lastDecision=$fi_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				$this->view->termDecision=$fi_lastDecision['term'];
				$this->view->amountDecision=$fi_lastDecision['amount'];
				$this->view->patrimonyDecision=$fi_lastDecision['patrimony'];
			}
			if ($in_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$in_lastDecision=$in_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				//var_dump($in_lastDecision['initiativeproduction']); die();
				$this->view->initiativeproductionDecision=$in_lastDecision['initiativeproduction'];
				$this->view->initiativemarketingDecision=$in_lastDecision['initiativemarketing'];
				$this->view->initiativehumanresourcesDecision=$in_lastDecision['initiativehumanresources'];
				$this->view->initiativedeteriorationDecision=$in_lastDecision['initiativedeterioration'];
			}
			if ($mr_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$mr_lastDecision=$mr_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				//var_dump($mr_lastDecision); die();
				$this->view->marketResearchDecision=$mr_lastDecision;
			}
			if ($idi_decisions->existsPrevious($_GET['game_id'], $_GET['company_id'], $_GET['round'])){
				$idi_lastDecision=$idi_decisions->getDecisionArray($_GET['game_id'], $_GET['company_id'], $_GET['round']);
				//var_dump($idi_lastDecision); die();
				$this->view->changeIdiDecision=$idi_lastDecision['changeIdi'];
				$this->view->newIdiDecision=$idi_lastDecision['newIdi'];
			}
		}
		
		function outcomesAction(){							
			$this->view->controllerName='game';
			$this->view->actionName="view";	
			$this->view->title .= " Ver - Resultados.";			
			if (isset ($_GET['game_id']) && isset($_GET['round_number'])){				
				
				$game_id=$_GET['game_id'];
				$round_number=$_GET['round_number'];
				
				if (isset ($_POST['publish'])){
					$outcomes=new Model_DbTable_Outcomes();
					$outcomes->switchPublication($game_id, $round_number);
				}
				
				$this->view->round_number=$round_number;
				$this->view->headTitle($this->view->title, 'PREPEND');
				
				$games = new Model_DbTable_Games();
				$game = $games->getGame($game_id);	
				$game_channels=$games->getChannels($_GET['game_id']);
				
				// Fabricas y Creditos
				//$factories=$games->getFactories($_GET['game_id'],$_GET['round'],$_GET['company_id']);
				//$amount=$games->getFinanceAmount($_GET['game_id']);

				$outcomes=new Model_DbTable_Outcomes();
				$outcomes->init($game_id,$round_number);
				$this->view->outcomes=$outcomes;
				$this->view->outcomes_production_units=$outcomes->getProductionUnits($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_sales_units=$outcomes->getSalesUnits($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_prices=$outcomes->getPrices($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_sales_incomes=$outcomes->getIncomes($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_stocks_units=$outcomes->getStocksUnits($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_costs=$outcomes->getCosts($_GET['game_id'], $_GET['round_number']);
				$this->view->outcomes_balance_sheet=$outcomes->getBalanceSheet($_GET['game_id'], $_GET['round_number']);
				$this->view->prev_outcomes_balance_sheet=0;
				if(($_GET['round_number'])>1){
					$this->view->prev_outcomes_balance_sheet=$outcomes->getBalanceSheet($_GET['game_id'], ($_GET['round_number']-1));
					//echo("CHECK POINT 1: this->view->prev_outcomes_balance_sheet = ".$this->view->prev_outcomes_balance_sheet."<br>");
				}
				//var_dump($this->view->prev_outcomes_balance_sheet);die();
				$this->view->outcomes_performance=$outcomes->getPerformance($_GET['game_id'], $_GET['round_number']);
				//var_dump($this->view->outcomes_sales_incomes);
				//var_dump($this->view->outcomes_costs);

				$this->view->outcomes_production_messages=$outcomes->getProductionMessages($_GET['game_id'], $_GET['round_number']);
				
				$this->view->game = $game;
				$this->view->games = $games;
				$this->view->companies = $games->getCompaniesInGame($_GET['game_id']);
				
				$this->view->channels=$game_channels;
				//productos
				$products=$games->getProducts($game_id);
				$this->view->products=$products;
				$this->view->game_product_availability=$games->getProductsAvailibilityBySomeone($_GET['game_id'], $_GET['round_number']);
				//var_dump($this->view->game_product_availability);die();
				//regiones
				$regions=$games->getRegions($game_id);
				$this->view->regions=$regions;
				//Medias
				$game_media=$games->getMedia($game_id);
				$this->view->media=$game_media;
				//Trademedia
				$trademedia[0]=array('trademedia_number'=>1, 'name'=>'Patrocinio');
				$trademedia[1]=array('trademedia_number'=>2, 'name'=>'PromociÃ³n');
				$this->view->trademedia=$trademedia;
				//Iniciativas. De momento no se usa, para el futuro se podra desglosar el coste por cada iniciativa de cada area
				$game_initiatives=$games->getInitiatives($_GET['game_id']);	
				$game_initiatives_prod=$games->getInitiativesProd($_GET['game_id']);
				$game_initiatives_hr=$games->getInitiativesHR($_GET['game_id']);
				$game_initiatives_mkt=$games->getInitiativesMKT($_GET['game_id']);
				$game_initiatives_det=$games->getInitiativesDET($_GET['game_id']);
				$this->view->initiativesProd=$game_initiatives_prod;
				$this->view->initiativesHR=$game_initiatives_hr;
				$this->view->initiativesMKT=$game_initiatives_mkt;
				$this->view->initiativesDET=$game_initiatives_det;
				
				foreach ($this->view->companies as $company) {
					$factories[$company['id']]=$games->getFactories($_GET['game_id'],$company['id']);
					$companies_factories[$company['id']]=$factories[$company['id']];
					$companies_deterioration[$company['id']]=$games->getFactoryDeterioration($_GET['game_id'],$_GET['round_number'],$company['id']);
					$companies_atmosphere[$company['id']]=$games->getWorkAtmosphere($_GET['game_id'],$_GET['round_number'],$company['id']);
					$companies_qualification[$company['id']]=$games->getQualificationLevel($_GET['game_id'],$_GET['round_number'],$company['id']);
					$companies_success[$company['id']]=$games->getSuccessProbabilityOutcomes($_GET['game_id'],$_GET['round_number'],$company['id']);
				}
				$this->view->game_factories=$companies_factories;
				$this->view->deterioration=$companies_deterioration;
				$this->view->atmosphere=$companies_atmosphere;
				$this->view->qualification=$companies_qualification;
				$this->view->success=$companies_success;
				//var_dump($this->view->success);die();
				//var_dump($this->view->atmosphere);die();
				//Estudios de Mercado
				$game_marketResearches_costs=$games->getMarketResearchesCosts($_GET['game_id']);
				$this->view->researchcosts=$game_marketResearches_costs;
				//I+D+i
				$idiProducts=$games->getIdiProducts($_GET['game_id']);
				$this->view->idiProducts=$idiProducts;
				
				$this->view->outcomes_market_sizes=$games->getMarketsSizes($_GET['game_id']);
				//var_dump($this->view->outcomes_market_sizes);die();
				foreach ($this->view->companies as $company) {
					$array[$company['id']]=$games->getYearAmortization($_GET['game_id'], $_GET['round_number'], $company['id']);
				}
				$this->view->amortization_view=$array;
				
				foreach ($this->view->companies as $company) {
					$factories=$games->getFactories($_GET['game_id'],$_GET['round_number'],$_GET['id']);
				}
				
			
			/*	foreach ($this->view->products as $product) {					
					foreach ($this->view->regions as $region) {
						$regions_number=$region['region_number'];
						foreach ($this->view->channels as $channel) {
							$channels_names['channel_number_'.$channel['channel_number']]=$channel['name'];
							foreach ($this->view->companies as $company) {
								$product_availability=$this->view->game_product_availability['product_number_'.$product['product_number']];
								if($product_availability==1){
									$products_number=$product['product_number'];
									$chart['product_number_'.$product['product_number']]['region_number_'.$region['region_number']]['channel_number_'.$channel['channel_number']][$company['id']]=(intval(10000*($games->getRealShare($_GET['game_id'], $company['id'], $_GET['round_number'], $product['product_number'], $region['region_number'], $channel['channel_number']))))/10000;
									$names[$company['id']]=$company['name'];
								}							
							}
						}
						$markets_names['channels']=$channels_names;
						//drawChart($chart, $names, $markets_names, $game_id, $round_number, $regions_number, $products_number);
					}
				}*/
				//$markets_names['products']=$products_names;
/*				$this->view->pie_chart=prepareArrayChart($chart);
				$this->view->pie_names=prepareArrayChart($names);
				$this->view->pie_markets=prepareArrayChart($markets_names);
*/
				
				//$data = array(7, 10, 9, 11, 8);
				

				
				/* Para el futuro, para sacar evoluciones temporales de ingresos y gastos
				$round=$_GET['round_number'];
				for ($index = 1; $index <= $round; $index++) {
					$outcomes_incomes=$outcomes->getIncomes($_GET['game_id'], $index);
					$outcomes_costs=$outcomes->getCosts($_GET['game_id'], $index);
					foreach ($this->view->companies as $company) {
						foreach ($this->view->products as $product) {
							foreach ($this->view->regions as $region) {
								foreach ($this->view->channels as $channel) {
									$incomes[$index][$company['id']]+=$outcomes_incomes['company_'.$company['id']]
																			['product_'.$product['product_number']]
																			['region_'.$region['region_number']]
																			['channel_'.$channel['channel_number']];
								}
							}
						}
					}
					foreach ($this->view->companies as $company) {
						foreach ($this->view->channels as $channel) {
							$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['mk_sales_costs'][$channel['channel_number']];
							$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['mk_fixed_costs'][$channel['channel_number']];
							$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['pr_rawMaterials_costs'][$channel['channel_number']];
						}
						foreach ($this->view->media as $media) {
							$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['mk_advert_costs'][$media['media_number']];	
						}
						foreach ($this->view->trademedia as $trademedia) {
							$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['mk_trade_costs'][$trademedia['trademedia_number']];	
						}
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['pr_fixed_cost'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['pr_var_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['pr_distrib_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['hr_hiring_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['hr_training_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['hr_wages_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['fi_debt_costs_st'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['fi_debt_costs_lt'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['initiatives_pr_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['initiatives_mk_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['initiatives_hr_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['market_researches_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['idi_changes_costs'];
						$costs['round_'.$index][$company['id']]+=$outcomes_costs[$company['id']]['idi_new_costs'];
					}
				}
				$this->view->incomes=prepareArrayChart($incomes);
				$this->view->costs=prepareArrayChart($costs);*/	
			}
		}
		function viewAction($params=null){
			$this->view->title .= " Ver.";
			$games = new Model_DbTable_Games();
			if (isset ($_GET['game_id'])){
				$game_id=$_GET['game_id'];
				$game = $games->getGame($game_id);
				$this->view->headTitle($this->view->title, 'PREPEND');
				$this->view->game_id=$game_id;	
				
				$this->view->game = $game;
				$this->view->games = $games;
				$this->view->companies = $games->getCompaniesInGame($game_id);
				
				//decisiones
				$this->view->production=new Model_DbTable_Decisions_Production();
				$this->view->marketing=new Model_DbTable_Decisions_Marketing();
				$this->view->suppliers=new Model_DbTable_Decisions_Suppliers();
				$this->view->humanResources=new Model_DbTable_Decisions_HumanResources();
				$this->view->finance=new Model_DbTable_Decisions_Finance();
				$this->view->initiatives=new Model_DbTable_Decisions_Initiatives();
				//Hay que crear sus tablas
				$this->view->marketresearch=new Model_DbTable_Decisions_MarketResearches();
				$this->view->IDi=new Model_DbTable_Decisions_Idi();
				$this->view->validate_user=new Model_DbTable_Decisions_Va_Validated();
				$this->view->validate_game=$games;
								
				
				$this->view->rounds=$games->getRounds($game_id);

			}
			else{
				$this->view->games = $games->getAllNonTemplateGames();				
			}
			$this->view->controllerName='game';
			$this->view->actionName="view";
			
		}
		
		function editAction($params=null){			
			$games = new Model_DbTable_Games();
			if ($this->getRequest()->isPost()){
				$game_id=$_GET['game_id'];
				if (isset ($game_id)){
					$formData = $this->getRequest()->getPost();
					//var_dump($formData); die();
					$games->editGame($game_id, $formData);				
				}				
			}
			if (isset ($_GET['game_id'])){
				$game_id=$_GET['game_id'];
				$game = $games->getGame($game_id);
				$this->view->headTitle($this->view->title, 'PREPEND');				
				$this->view->game_id=$game_id;
				if ($game['is_template']==0){	
					$this->view->title .= " Editar Juego. ";
				}
				else{
					$this->view->title .= " Editar Plantilla. ";
				}
				$this->view->game = $game;
				$this->view->games = $games;
				$this->view->companies = $games->getCompaniesInGame($game_id);
				//rondas
				$game_rounds=$games->getRounds($game_id);
				$this->view->numberOfRounds=count($game_rounds);
				$this->view->game_rounds=$game_rounds;
				//productos
				$game_products=$games->getProducts($game_id);
				$this->view->game_products=$game_products;
				//Budget I+D+i
				$game_products_budget=$games->getProductsBudgets($game_id);
				$this->view->game_products_budget=$game_products_budget;
				//atributos calidad
				$game_quality_params=$games->getQualityParams($game_id);
				$this->view->game_quality_params=$game_quality_params;
				//regiones
				$game_regions=$games->getRegions($game_id);
				$this->view->game_regions=$game_regions;
				//canales
				$game_channels=$games->getChannels($game_id);
				$this->view->game_channels=$game_channels;
				//medios
				$game_media=$games->getMedia($game_id);
				$this->view->game_media=$game_media;
				//iniciativas
				$game_initiatives=$games->getInitiatives($game_id);
				$this->view->game_initiatives=$game_initiatives;
				
				//Variables para los estudios de mercado
				//canales
				$channels=$games->getChannels($_GET['game_id']);
				$this->view->channels=$channels;
				//productos
				$products=$games->getProducts($_GET['game_id']);
				$this->view->products=$products;
				//regiones
				$regions=$games->getRegions($_GET['game_id']);
				$this->view->regions=$regions;
				$this->view->round_number=$_GET['round_number'];
				$this->view->game_product_availability=$games->getProductsAvailibilityBySomeone($_GET['game_id'], $_GET['round_number']);

			}
			else{
				$this->view->games = $games->getAllNonTemplateGames();
				$this->view->templates = $games->getTemplates();
				$this->view->title .= " Editar. ";
			}
			
			$this->view->controllerName='game';
			$this->view->actionName="edit";
		}

		function newAction(){
			$this->view->title .= " Crear.";
			$this->view->headTitle($this->view->title, 'PREPEND');
			$this->view->controllerName='game';
			$this->view->actionName="new";
			$games = new Model_DbTable_Games();

			$templates=$games->getTemplates();
			$this->view->templates=$templates;
			$errors=array();
			$form = new Form_NewGame();
			if ($this->getRequest()->isPost()){	
				$formData = $this->getRequest()->getPost();
				$gameFormData=$formData['newGame'];		
					
				print_r($gameFormData);			
				if (! $games->existsByName($gameFormData['name'])){
					$game_data=array('name'=>$gameFormData['name'], 'description'=>$gameFormData['description'], 'is_new'=>1, 
									 'based_on'=>$gameFormData['template'], 'is_template'=>$gameFormData['is_template'],
									 'n_regions'=>$gameFormData['n_regions'], 'n_channels'=>$gameFormData['n_channels'],
									 'n_products'=>$gameFormData['n_products'], 'n_media'=>$gameFormData['n_media'],
									 'n_qualities'=>$gameFormData['n_qualities'], 'n_initiatives'=>$gameFormData['n_initiatives']);
					$game_id=$games->addGame($game_data);
					$template_id=$gameFormData['template'];
					$games->applyGameTemplate($game_id, $template_id);
					$redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
					$redirector->gotoUrl($url."game/edit?game_id=".$game_id);
				}
				else{
					$errors[]="Ya existe un juego con ese nombre";
				}
				
			}
			$this->view->errors=$errors;
		}
		
		function deleteAction(){			
			if (isset ($_GET['game_id'])){
				$this->view->headTitle($this->view->title, 'PREPEND');						
				$games = new Model_DbTable_Games();
				$this->view->games=$games->deleteGame($_GET['game_id']);
				$redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
				$redirector->gotoUrl($url."game/index");
			}
		}
		
		function indexAction(){		
			$this->view->headTitle($this->view->title, 'PREPEND');
			$this->view->controllerName='game';
			$this->view->actionName="index";
			
			
			$games = new Model_DbTable_Games();
			$this->view->games=$games->getAllNonTemplateGames();
			$this->view->templates=$games->getTemplates();
		}
		
		function addcompanyAction(){
			$this->view->title .= " Editar - AÃ±adir Empresa. ";
			$this->view->headTitle($this->view->title, 'PREPEND');
			$this->view->controllerName='game';
			$this->view->actionName="add";
			
			$form = new Form_Company();
			$this->view->form=$form;
			$game_id=$_GET['game_id'];
			if ($this->getRequest()->isPost()){
				$formData = $this->getRequest()->getPost();
				if ($form->isValid($formData)){
					$companies = new Model_DbTable_Companies();
					if (! $companies->exists(array('game_id'=>$game_id, 'name'=>$formData['name']))){
						$companyData=array('name'=>$formData['name'], 'game_id'=>$game_id, 'registration_password'=>$formData['registration_password']);
						$companies -> addCompany($companyData);
						$redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
						$redirector->gotoUrl($url."game/edit?game_id=".$game_id);
					}
				}
				else{
					$form -> populate($formData);
				}
			}
			
		}
		function simulateAction(){	
			$core=new Model_Simulation_Core();
		}
	}
	/*function drawChart($chartArray, $namesArray, $marketsArray, $game_id, $round_number, $product_number, $region_number) {
		include_once ('Zend/jpgraph/jpgraph.php'); 
		include_once ('Zend/jpgraph/jpgraph_pie.php');
		include_once ('Zend/jpgraph/jpgraph_pie3d.php');				
			
		$graph  = new PieGraph (1000,1000);
		$theme_class= new VividTheme;
		$graph->SetTheme($theme_class);
		$graph->SetShadow(); 
		$graph->title-> Set("Cuotas de mercado"); 
		$graph->title->SetFont(FF_FONT1,FS_BOLD,24);
		//$graph->xaxis->SetLabelAngle(45);
		//Vemos el numero de mercados existentes
		foreach ($chartArray as $aux_array) {
			$region_counter=$region_number;
			while(isset ($aux_array['region_number_'.$region_counter])){
				$array_aux=$aux_array['region_number_'.$region_counter];
				$channel_counter=1;
				$n_markets=0;
				while(isset ($array_aux['channel_number_'.$channel_counter])){
					$n_markets++;
					$data=$array_aux['channel_number_'.$channel_counter];
					$j=0;
					for ($i = 0; $i <= max(array_keys($data)); $i++) {
						if(($data[$i])!=0){
							$string[$j]="Equipo: ".$namesArray[$i];
							$j++;
						}
					}
					$channel_counter++;
				}
				$region_counter++;
			}
		}
		var_dump($product_number);
		var_dump($region_number);
		var_dump($channel_counter);
		$size=1/(2.5*$n_markets);
		foreach ($chartArray as $array) {
			$x_center=0.5;
			$y_center=0.17;
			$region_counter=$region_number;
			while(isset ($array['region_number_'.$region_counter])){
				$channel_counter=1;
				$array_aux=$array['region_number_'.$region_counter];
				$market_counter=0;
				while(isset ($array_aux['channel_number_'.$channel_counter])){
					$market_counter++;
					$data=array_values($array_aux['channel_number_'.$channel_counter]);
					$p1  = new PiePlot3D($data); 			
					$graph->Add($p1); 
					$p1->ShowBorder();
					$p1->SetSize($size);
					if($n_markets==1){
						$p1->SetCenter(($center*0.5),(0.5*$center));
					}
					else {
						$x_position=$x_center;
						$y_position=$y_center*$channel_counter;
						$p1->SetCenter($x_position,$y_position);
					}
					$p1->title->Set(" Canal: ".$marketsArray['channels']['channel_number_'.$channel_counter]);
					echo("<br/> ");
					//$p1->SetLabelFormat("%1.2f");
					$p1->value->Show();
					$channel_counter++;
				}
				$region_counter++;
			}
		}
		//$p1->SetLegends($string);
		//$graph->Stroke();
		$gdImgHandler = $graph->Stroke(_IMG_HANDLER);
		$fileName = "/var/www/simu2/public/tmp/" . md5("img_".$game_id."_".$round_number."_".$product_number."_".$region_number) .".png";
		$graph->img->Stream($fileName);
	}*/
	
	
?>